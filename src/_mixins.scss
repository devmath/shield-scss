/*----------------------FLEX BOX MIXINS----------------------*/

/*
	Name: display-flex
	Trigger: df()
*/
@mixin display-flex() {
	display: -webkit-flex;
	display: -ms-flex;
	display: flex;
}

/*
	Name: flex-flow
	Trigger: ff()
*/
@mixin flex-flow($flow) {
	-webkit-flex-flow: $flow;
	-ms-flex-flow: $flow;
	flex-flow: $flow;
}

/*
	Name: inline-flex
	Trigger: inf()
*/
@mixin inline-flex() {
	display: -webkit-inline-flex;
	display: -ms-inline-flex;
	display: inline-flex;
}

/*
	Name: flex-container
	Trigger: fc()
*/
@mixin flex-container($flow, $inline: false) {
	@if $inline == true {
		@include inline-flex();
	} @else {
		@include display-flex();	
	}

	@include flex-flow($flow);
}

/*
	Name: justify-content
	Trigger: jc()
*/
@mixin justify-content($align) {
	-webkit-justify-content: $align;
	-ms-justify-content: $align;
	justify-content: $align;	
}

/*
	Name: align-items
	Trigger: ai()
*/
@mixin align-items($align) {
	-webkit-align-items: $align;
	-ms-align-items: $align;
	align-items: $align;	
}

/*
	Name: align-content
	Trigger: ac()
*/
@mixin align-content($align) {
	-webkit-align-content: $align;
	-ms-align-content: $align;
	align-content: $align;	
}

/*
	Name: flex-align
	Trigger: fa()
*/
@mixin flex-align($justify-content, $align-items, $align-content) {
	@include justify-content($justify-content);
	@include align-items($align-items);
	@include align-content($align-content);
}

/*
	Name: flex-item
	Trigger: fi()
*/
@mixin flex-item($flex) {
	-webkit-flex: $flex;
	-ms-flex: $flex;
	flex: $flex;
}


/*----------------------GENERIC MIXINS----------------------*/

// Define the property for box-sizing
@mixin box-sizing($bs) {
	-webkit-box-sizing: $bs;
	box-sizing: $bs;
}

// Define the property for transition
@mixin transition($transition) {
	-webkit-transition: $transition;
	-o-transition: $transition;
	transition: $transition;
}

// Define the property for transform
@mixin transform($transform) {
	-webkit-transform: $transform;
	-ms-transform: $transform;
	transform: $transform;
}

// Font-size using $font-size map
@mixin font-size($size) {	
	font-size: map-get($font-size, $size);
}

// Font-family using $font-family map
@mixin font-family($font-name) {	
	font-family: map-get($font-family, $font-name), map-get($font-family, type);
}

// z-index using $z-index map
@mixin z-index($z) {
	@if map-has-key($z-index, $z) == false {
		@warn "This z-index doesn't exist";
	} 
	
	z-index: map-get($z-index, $z);
}


// Generate headers like h1, h2 and more
@mixin header-tags() {
	@each $h, $val in $headers {
		.#{$h} {
			font-size: $val;
		}
	}
}

// Generate input-placeholder CSS
@mixin input-placeholder($input) {
	#{$input}::-webkit-input-placeholder {
		@content;
	}

	#{$input}:-moz-placeholder {
		@content;
	}

	#{$input}::-moz-placeholder {
		@content;
	}

	#{$input}:-ms-input-placeholder {
		@content;
	}
}

// Media query with max-width
@mixin media-max($breakpoint) {
	@if map-has-key($devices, $breakpoint) {
		@media screen and (max-width: $breakpoint) {
			@content;
		}
	}

	@warn 'This breakpoint doesn\'t exist on $devices';
}

// Media query with min-width
@mixin media-min($breakpoint) {
	@if map-has-key($devices, $breakpoint) {
		@media screen and (min-width: $breakpoint) {
			@content;
		}
	}

	@warn 'This breakpoint doesn\'t exist on $devices';
}