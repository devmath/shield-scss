//----------STRUCTURE MIXINS----------//


//---COMMOM MEDIA MIXIN---//

// 	Name: media-max
// 	Trigger: mdmax($breakpoint)
// 	Return media screen and (max-width)
@mixin media-max($breakpoint) {
	@if hasKey($devices, $breakpoint) {
		@media screen and (max-width: $breakpoint) {
			@content;
		}
	}

	@warn 'This breakpoint doesn\'t exist on $devices';
}

// 	Name: media-min
// 	Trigger: mdmin($breakpoint)
// 	Return media screen and (min-width)
@mixin media-min($breakpoint) {
	@if hasKey($devices, $breakpoint) {
		@media screen and (min-width: $breakpoint) {
			@content;
		}
	}

	@warn 'This breakpoint doesn\'t exist on $devices';
}

// 	Name: media-between
// 	Trigger: mdbet($min, $max)
// 	Return media screen betwenn $min and $max
@mixin media-between($min, $max) {
	@if hasKey($devices, $min) and hasKey($devices, $max) {
		@media (min-width: $min) and (max-width: $max) {
			@content;
		}
	}

	@warn 'These breakpoints doesn\'t exist on $devices';
}


//---MIN WIDTH---//

// 	Name: min-laptop
// 	Trigger: mnlap
// 	Return media screen and (min-width: laptop)
@mixin min-laptop {
	@if hasKey($devices, laptop) {
		@media screen and (min-width: getDevice(laptop)) {
			@content;
		}
	}

	@warn 'laptop breakpoint doesn\'t exist on $devices';
}

// 	Name: min-desktop
// 	Trigger: mndk
// 	Return media screen and (min-width: desktop)
@mixin min-desktop {
	@if hasKey($devices, desktop) {
		@media screen and (min-width: getDevice(desktop)) {
			@content;
		}
	}

	@warn 'desktop breakpoint doesn\'t exist on $devices';
}

// 	Name: min-tablet
// 	Trigger: mntbt
// 	Return media screen and (min-width: tablet)
@mixin min-tablet {
	@if hasKey($devices, tablet) {
		@media screen and (min-width: getDevice(tablet)) {
			@content;
		}
	}

	@warn 'tablet breakpoint doesn\'t exist on $devices';
}

// 	Name: min-phone
// 	Trigger: mnpn
// 	Return media screen and (min-width: phone)
@mixin min-phone {
	@if hasKey($devices, phone) {
		@media screen and (min-width: getDevice(phone)) {
			@content;
		}
	}

	@warn 'phone breakpoint doesn\'t exist on $devices';
}


//---MAX WIDTH---//

// 	Name: max-laptop
// 	Trigger: mxlap
// 	Return media screen and (max-width: laptop)
@mixin max-laptop {
	@if hasKey($devices, laptop) {
		@media screen and (max-width: getDevice(laptop)) {
			@content;
		}
	}

	@warn 'laptop breakpoint doesn\'t exist on $devices';
}

// 	Name: max-desktop
// 	Trigger: mxdk
// 	Return media screen and (max-width: desktop)
@mixin max-desktop {
	@if hasKey($devices, desktop) {
		@media screen and (max-width: getDevice(desktop)) {
			@content;
		}
	}

	@warn 'desktop breakpoint doesn\'t exist on $devices';
}

// 	Name: max-tablet
// 	Trigger: mxtbt
// 	Return media screen and (max-width: tablet)
@mixin max-tablet {
	@if hasKey($devices, tablet) {
		@media screen and (max-width: getDevice(tablet)) {
			@content;
		}
	}

	@warn 'tablet breakpoint doesn\'t exist on $devices';
}

// 	Name: max-phone
// 	Trigger: mxpn
// 	Return media screen and (max-width: phone)
@mixin max-phone {
	@if hasKey($devices, phone) {
		@media screen and (max-width: getDevice(phone)) {
			@content;
		}
	}

	@warn 'phone breakpoint doesn\'t exist on $devices';
}


//---PRINT---//

// 	Name: print
// 	Trigger: mpnt
// 	Return media print
@mixin media-print {
	@media print {
		@content;
	}
}


//---RETINA---//

// 	Name: retina
// 	Trigger: mret
// 	Return media only screen and (device-pixel-ratio) / (min-resolution) 
@mixin retina {
	@media only screen and (-webkit-min-device-pixel-ratio: 2),
		only screen and (-o-min-device-pixel-ratio: 2/1),
		only screen and (min-device-pixel-ratio: 2),
		only screen and (min-resolution: 192dpi),
		only screen and (min-resolution: 2dppx) { 
			@content;
	}
}